{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/saracarlstein/project-auth/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/saracarlstein/project-auth/backend\",\"filename\":\"/Users/saracarlstein/project-auth/backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/saracarlstein/project-auth/backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/saracarlstein/project-auth/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/saracarlstein/project-auth/backend",
      "filename": "/Users/saracarlstein/project-auth/backend/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/saracarlstein/project-auth/backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/saracarlstein/project-auth/backend/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/saracarlstein/project-auth/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/saracarlstein/project-auth/backend/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/authAPI\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\nvar Thought = _mongoose[\"default\"].model('Thought', {\n  message: String\n}); // at least two properties \n\n\nvar User = _mongoose[\"default\"].model('User', {\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n}); // access token always sent when you send your request frmo front end \n// if user have the access token then next()\n//authenicate middlewear, specific on some end point or always \n\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var accessToken, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            accessToken = req.header('Authorization');\n            _context.prev = 1;\n            _context.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (user) {\n              next();\n            } else {\n              res.status(401).json({\n                success: false,\n                message: 'Not authorized'\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: 'Invalid request',\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Defines the port the app will run on. Defaults to 8080, but can be \n\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json()); // Start defining your routes here\n//GET Requests\n\napp.get('/', function (req, res) {\n  res.send('Hello world');\n}); //GET Requests to get all messages in Thought model:\n// specify authenticateUser for this end point, do we have a user with this token -> then move on to next()\n\napp.get('/thoughts', authenticateUser);\napp.get('/thoughts', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var thoughts;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Thought.find();\n\n          case 2:\n            thoughts = _context2.sent;\n            res.json({\n              success: true,\n              thoughts: thoughts\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/thoughts', authenticateUser);\napp.post('/thoughts', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var message, newThought;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            message = req.body.message;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return new Thought({\n              message: message\n            }).save();\n\n          case 4:\n            newThought = _context3.sent;\n            res.json({\n              success: true,\n              newThought: newThought\n            });\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: 'Invalid request',\n              error: _context3.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); // username and password required en point \n// hash password, never need to reveal the password when login in\n// there is one matching hashed password in the database when login in \n// Salt: making the hash password random, makes it difficult to hack.\n// hashed randomized password \n// or '/users' or '/register'\n\napp.post('/signup', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body, username, password, salt, newUser;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body = req.body, username = _req$body.username, password = _req$body.password;\n            _context4.prev = 1;\n            salt = _bcrypt[\"default\"].genSaltSync();\n            _context4.next = 5;\n            return new User({\n              username: username,\n              password: _bcrypt[\"default\"].hashSync(password, salt)\n            }).save();\n\n          case 5:\n            newUser = _context4.sent;\n            res.json({\n              success: true,\n              userID: newUser._id,\n              username: newUser.username,\n              accessToken: newUser.accessToken\n            });\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: 'Invalid request',\n              error: _context4.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 9]]);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}()); // or '/session' or '/login'\n\napp.post('/signin', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body2, username, password, user;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n            console.log(username, password);\n            _context5.prev = 2;\n            _context5.next = 5;\n            return User.findOne({\n              username: username\n            });\n\n          case 5:\n            user = _context5.sent;\n\n            if (user && _bcrypt[\"default\"].compareSync(password, user.password)) {\n              res.json({\n                success: true,\n                userID: user._id,\n                username: user.username,\n                accessToken: user.accessToken\n              });\n            } else {\n              res.status(404).json({\n                success: false,\n                message: 'User not found'\n              });\n            }\n\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](2);\n            res.status(400).json({\n              success: false,\n              message: 'Invalid request',\n              error: _context5.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 9]]);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  // eslint-disable-next-line\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useCreateIndex",
        "Promise",
        "Thought",
        "model",
        "message",
        "String",
        "User",
        "username",
        "type",
        "required",
        "unique",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "authenticateUser",
        "req",
        "res",
        "next",
        "header",
        "findOne",
        "user",
        "status",
        "json",
        "success",
        "error",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "get",
        "send",
        "find",
        "thoughts",
        "post",
        "body",
        "save",
        "newThought",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hashSync",
        "newUser",
        "userID",
        "_id",
        "console",
        "log",
        "compareSync",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/saracarlstein/project-auth/backend/",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\nimport crypto from 'crypto'\nimport bcrypt from 'bcrypt'\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/authAPI\"\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true })\nmongoose.Promise = Promise\n\nconst Thought = mongoose.model('Thought', {\n  message: String\n})\n\n// at least two properties \nconst User = mongoose.model('User', {\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n});\n\n// access token always sent when you send your request frmo front end \n// if user have the access token then next()\n//authenicate middlewear, specific on some end point or always \nconst authenticateUser = async (req, res, next) => {\n  const accessToken = req.header('Authorization');\n\n  try {\n    const user = await User.findOne({ accessToken });\n    if (user) {\n      next();\n    } else {\n      res.status(401).json({ success: false, message: 'Not authorized' });\n    }\n  } catch (error) {\n    res.status(400).json({ success: false, message: 'Invalid request', error });\n  }\n}\n\n// Defines the port the app will run on. Defaults to 8080, but can be \nconst port = process.env.PORT || 8080\nconst app = express()\n\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n// Start defining your routes here\n//GET Requests\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n//GET Requests to get all messages in Thought model:\n// specify authenticateUser for this end point, do we have a user with this token -> then move on to next()\napp.get('/thoughts', authenticateUser);\napp.get('/thoughts', async (req, res) => {\n  const thoughts = await Thought.find();\n  res.json({ success: true, thoughts});\n});\n\napp.post('/thoughts', authenticateUser);\napp.post('/thoughts', async (req, res) => {\n  const { message } = req.body;\n\n  try {\n    const newThought = await new Thought({ message }).save();\n    res.json({ success: true, newThought});\n  } catch (error) {\n    res.status(400).json({ success: false, message: 'Invalid request', error });\n  }\n});\n\n// username and password required en point \n// hash password, never need to reveal the password when login in\n// there is one matching hashed password in the database when login in \n// Salt: making the hash password random, makes it difficult to hack.\n// hashed randomized password \n// or '/users' or '/register'\napp.post('/signup', async (req, res) => {\n  const { username, password } = req.body;\n\n  try {\n    const salt = bcrypt.genSaltSync();\n\n    const newUser = await new User({\n      username,\n      password: bcrypt.hashSync(password, salt)\n    }).save();\n\n    res.json({\n      success: true,\n      userID: newUser._id,\n      username: newUser.username,\n      accessToken: newUser.accessToken\n    });\n  } catch (error) {\n    res.status(400).json({ success: false, message: 'Invalid request', error });\n  }\n});\n\n\n// or '/session' or '/login'\napp.post('/signin', async (req, res) => {\n  const { username, password } = req.body;\n\n  console.log(username, password);\n\n  try {\n    const user = await User.findOne({ username });\n\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.json({\n        success: true, \n        userID: user._id,\n        username: user.username,\n        accessToken: user.accessToken\n      });\n    } else {\n      res.status(404).json({ success: false, message: 'User not found' });\n    }\n  } catch (error) {\n    res.status(400).json({ success: false, message: 'Invalid request', error });\n  }\n});\n\n\n// Start the server\napp.listen(port, () => {\n  // eslint-disable-next-line\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622027839569
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend\",\"filename\":\"/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend",
      "filename": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/finalproject\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; // Defines the port the app will run on. Defaults to 8080\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // CONCEPT SCHEMA\n\nvar conceptSchema = new _mongoose[\"default\"].Schema({\n  concept: {\n    type: String\n  },\n  description: {\n    type: String,\n    required: true,\n    maxlength: 140\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  likes: {\n    type: Number,\n    \"default\": 0\n  }\n}); //USER SCHEMA\n\nvar userSchema = new _mongoose[\"default\"].Schema({\n  username: {\n    type: String,\n    required: true\n  },\n  //email\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  }\n});\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var accessToken, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            accessToken = req.header(\"Authorization\");\n            _context.prev = 1;\n            _context.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (user) {\n              next();\n            } else {\n              res.status(401).json({\n                sucess: false,\n                message: \"Not authorized\"\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(404).json({\n              sucess: false,\n              message: \"Invalid request\",\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Concept = _mongoose[\"default\"].model(\"Concept\", conceptSchema);\n\nvar User = _mongoose[\"default\"].model(\"User\", userSchema); // Add middlewares to enable cors and json body parsing\n\n\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json()); // Start defining your routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Our backend\");\n}); //POST USER \"/singup\" and \"/signin\"\n\napp.post(\"/signup\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, username, password, salt, newUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //lägg till email\n            _req$body = req.body, username = _req$body.username, password = _req$body.password;\n            _context2.prev = 1;\n            salt = _bcrypt[\"default\"].genSaltSync();\n            _context2.next = 5;\n            return new User({\n              username: username,\n              password: _bcrypt[\"default\"].hashSync(password, salt)\n            }).save();\n\n          case 5:\n            newUser = _context2.sent;\n            res.json({\n              success: true,\n              userID: newUser._id,\n              username: newUser.username,\n              accessToken: newUser.accessToken\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: \"Invalid request\"\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post(\"/signin\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, username, password, user;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return User.findOne({\n              username: username\n            });\n\n          case 4:\n            user = _context3.sent;\n\n            if (user && _bcrypt[\"default\"].compareSync(password, user.password)) {\n              res.json({\n                success: true,\n                userID: user._id,\n                username: user.username,\n                accessToken: user.accessToken\n              });\n            } else {\n              res.status(404).json({\n                sucess: false,\n                message: \"User or password not found\"\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400).json({\n              sucess: false,\n              message: \"Invalid rewquest\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //POST CONCEPTS\n// Gör så att bara vi har behörighet till denna endpoint\n\napp.post(\"/concepts\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, concept, description, newConcept;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, concept = _req$body3.concept, description = _req$body3.description; // ska vi ha success här?\n\n            _context4.prev = 1;\n            _context4.next = 4;\n            return new Concept({\n              concept: concept,\n              description: description\n            }).save();\n\n          case 4:\n            newConcept = _context4.sent;\n            res.json(newConcept);\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: \"Invalid request\",\n              error: _context4.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //POST for the user to add explanation of the concept\n//Authenticate user, to promot login\n\napp.post(\"/concepts/descriptions\", authenticateUser);\napp.post(\"/concepts/descriptions\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body4, concept, description, newConcept;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body4 = req.body, concept = _req$body4.concept, description = _req$body4.description; // ska vi ha success här?\n\n            _context5.prev = 1;\n            _context5.next = 4;\n            return new Concept({\n              concept: concept,\n              description: description\n            }).save();\n\n          case 4:\n            newConcept = _context5.sent;\n            res.json(newConcept);\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              message: \"Invalid request\",\n              error: _context5.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // GET CONCEPTS\n\napp.get(\"/concepts\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$query, page, size, limit, skip, concept;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _req$query = req.query, page = _req$query.page, size = _req$query.size; //ska vi ha success här?\n            // pagination items per page\n\n            if (!page) {\n              page = 1;\n            }\n\n            if (!size) {\n              size = 10;\n            }\n\n            limit = parseInt(size);\n            skip = (page - 1) * size; // const page = await Concept.find().limit(limit).skip(skip)\n            // res.send({ page, size, data: page })\n\n            _context6.next = 8;\n            return Concept.find().sort({\n              concept: 1\n            }).skip(skip).limit(limit);\n\n          case 8:\n            concept = _context6.sent;\n            res.json({\n              page: page,\n              size: size,\n              data: concept\n            });\n            _context6.next = 15;\n            break;\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(400).json({\n              success: false,\n              message: \"Invalid request\",\n              error: _context6.t0\n            });\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 12]]);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}()); // One concept with all the desciptions through concept id\n\napp.get(\"/concepts/:conceptId\"), /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var conceptId, oneConcept;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            conceptId = req.params.conceptId;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return Concept.findOne({\n              _id: conceptId\n            });\n\n          case 4:\n            oneConcept = _context7.sent;\n\n            if (oneConcept) {\n              res.json(oneConcept);\n            } else {\n              // Error when the id format is valid but no concept is found\n              res.status(400).json({\n                error: \"no concept found\"\n              });\n            }\n\n            _context7.next = 11;\n            break;\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](1);\n            res.status(404).json({\n              error: \"invalid request\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 8]]);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //TEST\n\napp.get(\"/concepts/concept/:_id\"), /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var oneConcept;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return Concept.findOne({\n              _id: req.params._id\n            });\n\n          case 3:\n            oneConcept = _context8.sent;\n\n            if (oneConcept) {\n              res.json(oneConcept);\n            } else {\n              // Error when the id format is valid but no concept is found\n              res.status(400).json({\n                error: \"no concept found\"\n              });\n            }\n\n            _context8.next = 10;\n            break;\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(404).json({\n              error: \"invalid request\"\n            });\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}(); // Start the server\n\napp.listen(port, function () {\n  // eslint-disable-next-line\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "port",
        "PORT",
        "app",
        "conceptSchema",
        "Schema",
        "concept",
        "type",
        "String",
        "description",
        "required",
        "maxlength",
        "createdAt",
        "Date",
        "now",
        "likes",
        "Number",
        "userSchema",
        "username",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "authenticateUser",
        "req",
        "res",
        "next",
        "header",
        "User",
        "findOne",
        "user",
        "status",
        "json",
        "sucess",
        "message",
        "error",
        "Concept",
        "model",
        "use",
        "express",
        "get",
        "send",
        "post",
        "body",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hashSync",
        "save",
        "newUser",
        "success",
        "userID",
        "_id",
        "compareSync",
        "newConcept",
        "query",
        "page",
        "size",
        "limit",
        "parseInt",
        "skip",
        "find",
        "sort",
        "data",
        "conceptId",
        "params",
        "oneConcept",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/saracarlstein/Desktop/Bootcamp/Final-project/backend/",
      "sourcesContent": [
        "import express from \"express\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/finalproject\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n// Defines the port the app will run on. Defaults to 8080\n\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// CONCEPT SCHEMA\nconst conceptSchema = new mongoose.Schema({\n  concept: {\n    type: String,\n  },\n  description: {\n    type: String,\n    required: true,\n    maxlength: 140,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  likes: {\n    type: Number,\n    default: 0,\n  },\n});\n\n//USER SCHEMA\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n  },\n  //email\n  password: {\n    type: String,\n    required: true,\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\"),\n  },\n});\n\nconst authenticateUser = async (req, res, next) => {\n  const accessToken = req.header(\"Authorization\");\n  try {\n    const user = await User.findOne({ accessToken });\n    if (user) {\n      next();\n    } else {\n      res.status(401).json({ sucess: false, message: \"Not authorized\" });\n    }\n  } catch (error) {\n    res.status(404).json({ sucess: false, message: \"Invalid request\", error });\n  }\n};\n\nconst Concept = mongoose.model(\"Concept\", conceptSchema);\nconst User = mongoose.model(\"User\", userSchema);\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(express.json());\n\n// Start defining your routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Our backend\");\n});\n\n//POST USER \"/singup\" and \"/signin\"\napp.post(\"/signup\", async (req, res) => {\n  //lägg till email\n  const { username, password } = req.body;\n\n  try {\n    const salt = bcrypt.genSaltSync();\n\n    const newUser = await new User({\n      username,\n      password: bcrypt.hashSync(password, salt),\n    }).save();\n\n    res.json({\n      success: true,\n      userID: newUser._id,\n      username: newUser.username,\n      accessToken: newUser.accessToken,\n    });\n  } catch (error) {\n    res.status(400).json({ success: false, message: \"Invalid request\" });\n  }\n});\n\napp.post(\"/signin\", async (req, res) => {\n  const { username, password } = req.body;\n\n  try {\n    const user = await User.findOne({ username });\n\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.json({\n        success: true,\n        userID: user._id,\n        username: user.username,\n        accessToken: user.accessToken,\n      });\n    } else {\n      res\n        .status(404)\n        .json({ sucess: false, message: \"User or password not found\" });\n    }\n  } catch (error) {\n    res.status(400).json({ sucess: false, message: \"Invalid rewquest\" });\n  }\n});\n\n//POST CONCEPTS\n// Gör så att bara vi har behörighet till denna endpoint\n\napp.post(\"/concepts\", async (req, res) => {\n  const { concept, description } = req.body;\n\n  // ska vi ha success här?\n  try {\n    const newConcept = await new Concept({\n      concept,\n      description,\n    }).save();\n    res.json(newConcept);\n  } catch (error) {\n    res.status(400).json({ success: false, message: \"Invalid request\", error });\n  }\n});\n\n//POST for the user to add explanation of the concept\n//Authenticate user, to promot login\napp.post(\"/concepts/descriptions\", authenticateUser);\napp.post(\"/concepts/descriptions\", async (req, res) => {\n  const { concept, description } = req.body;\n\n  // ska vi ha success här?\n  try {\n    const newConcept = await new Concept({\n      concept,\n      description,\n    }).save();\n    res.json(newConcept);\n  } catch (error) {\n    res.status(400).json({ success: false, message: \"Invalid request\", error });\n  }\n});\n\n// GET CONCEPTS\napp.get(\"/concepts\", async (req, res) => {\n  try {\n    let { page, size } = req.query;\n    //ska vi ha success här?\n    // pagination items per page\n\n    if (!page) {\n      page = 1;\n    }\n    if (!size) {\n      size = 10;\n    }\n    const limit = parseInt(size);\n    const skip = (page - 1) * size;\n    // const page = await Concept.find().limit(limit).skip(skip)\n    // res.send({ page, size, data: page })\n    const concept = await Concept.find()\n      .sort({ concept: 1 })\n      .skip(skip)\n      .limit(limit);\n\n    res.json({ page, size, data: concept });\n  } catch (error) {\n    res.status(400).json({ success: false, message: \"Invalid request\", error });\n  }\n});\n\n// One concept with all the desciptions through concept id\n\napp.get(\"/concepts/:conceptId\"),\n  async (req, res) => {\n    const { conceptId } = req.params;\n    try {\n      const oneConcept = await Concept.findOne({ _id: conceptId });\n      if (oneConcept) {\n        res.json(oneConcept);\n      } else {\n        // Error when the id format is valid but no concept is found\n        res.status(400).json({ error: \"no concept found\" });\n      }\n    } catch (err) {\n      res.status(404).json({ error: \"invalid request\" });\n    }\n  };\n\n//TEST\napp.get(\"/concepts/concept/:_id\"),\n  async (req, res) => {\n    try {\n      const oneConcept = await Concept.findOne({ _id: req.params._id });\n      if (oneConcept) {\n        res.json(oneConcept);\n      } else {\n        // Error when the id format is valid but no concept is found\n        res.status(400).json({ error: \"no concept found\" });\n      }\n    } catch (err) {\n      res.status(404).json({ error: \"invalid request\" });\n    }\n  };\n// Start the server\napp.listen(port, () => {\n  // eslint-disable-next-line\n  console.log(`Server running on http://localhost:${port}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622621639305
  }
}