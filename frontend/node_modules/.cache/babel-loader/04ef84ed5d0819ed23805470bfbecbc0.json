{"ast":null,"code":"var _jsxFileName = \"/Users/saracarlstein/project-auth/frontend/src/components/Main.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch, batch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { API_URL } from '../reusables/urls';\nimport thoughts from '../reducers/thoughts';\n\nconst Main = () => {\n  const accessToken = useSelector(store => store.user.accessToken);\n  const thoughtsItems = useSelector(store => store.thoughts.items);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (!accessToken) {\n      history.push('/login');\n    }\n  }, [accessToken, history]);\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: accessToken\n      }\n    };\n    fetch(API_URL('thoughts'), options).then(res => res.json()).then(data => {\n      if (data.success) {\n        batch(() => {\n          dispatch(thoughts.actions.setThoughts(data.thoughts));\n          dispatch(thoughts.actions.setErrors(null));\n        });\n      } else {\n        dispatch(thoughts.actions.setErrors(data));\n      }\n    });\n  }, [accessToken]);\n  console.log(thoughtsItems);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"MAIN\"), React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"To login we go!\"), thoughtsItems.map(thought => React.createElement(\"div\", {\n    key: thought._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, thought.message)));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/saracarlstein/project-auth/frontend/src/components/Main.js"],"names":["React","useEffect","useSelector","useDispatch","batch","useHistory","Link","API_URL","thoughts","Main","accessToken","store","user","thoughtsItems","items","dispatch","history","push","options","method","headers","Authorization","fetch","then","res","json","data","success","actions","setThoughts","setErrors","console","log","map","thought","_id","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,KAAnC,QAAgD,aAAhD;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,WAAW,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;AACA,QAAMG,aAAa,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACH,QAAN,CAAeM,KAAzB,CAAjC;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,WAAL,EAAkB;AACdM,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH;AACJ,GAJQ,EAIN,CAACP,WAAD,EAAcM,OAAd,CAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEX;AADV;AAFG,KAAhB;AAOAY,IAAAA,KAAK,CAACf,OAAO,CAAC,UAAD,CAAR,EAAsBW,OAAtB,CAAL,CACKK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACdvB,QAAAA,KAAK,CAAC,MAAM;AACRW,UAAAA,QAAQ,CAACP,QAAQ,CAACoB,OAAT,CAAiBC,WAAjB,CAA6BH,IAAI,CAAClB,QAAlC,CAAD,CAAR;AACAO,UAAAA,QAAQ,CAACP,QAAQ,CAACoB,OAAT,CAAiBE,SAAjB,CAA2B,IAA3B,CAAD,CAAR;AACH,SAHI,CAAL;AAIH,OALD,MAKO;AACHf,QAAAA,QAAQ,CAACP,QAAQ,CAACoB,OAAT,CAAiBE,SAAjB,CAA2BJ,IAA3B,CAAD,CAAR;AACH;AACJ,KAXL;AAYH,GApBQ,EAoBN,CAAChB,WAAD,CApBM,CAAT;AAsBAqB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGKA,aAAa,CAACoB,GAAd,CAAkBC,OAAO,IACtB;AAAK,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,OAAO,CAACE,OAAhC,CADH,CAHL,CADJ;AASH,CA7CD;;AA+CA,eAAe3B,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, batch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { API_URL } from '../reusables/urls';\n\nimport thoughts from '../reducers/thoughts';\n\nconst Main = () => {\n    const accessToken = useSelector(store => store.user.accessToken);\n    const thoughtsItems = useSelector(store => store.thoughts.items);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!accessToken) {\n            history.push('/login');\n        }\n    }, [accessToken, history]);\n\n    useEffect(() => {\n        const options = {\n            method: 'GET',\n            headers: {\n                Authorization: accessToken\n            }\n        }\n\n        fetch(API_URL('thoughts'), options)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    batch(() => {\n                        dispatch(thoughts.actions.setThoughts(data.thoughts));\n                        dispatch(thoughts.actions.setErrors(null));\n                    });\n                } else {\n                    dispatch(thoughts.actions.setErrors(data));\n                }\n            });\n    }, [accessToken]);\n\n    console.log(thoughtsItems)\n    return (\n        <div>\n            <div>MAIN</div>\n            <Link to=\"/login\">To login we go!</Link>\n            {thoughtsItems.map(thought => (\n                <div key={thought._id}>{thought.message}</div>\n            ))}\n        </div>\n    );\n};\n\nexport default Main"]},"metadata":{},"sourceType":"module"}