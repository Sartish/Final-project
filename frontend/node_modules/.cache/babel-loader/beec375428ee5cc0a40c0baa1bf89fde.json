{"ast":null,"code":"import _slicedToArray from \"/Users/saracarlstein/project-auth/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saracarlstein/project-auth/frontend/src/components/Login.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch, batch } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\n// import user from '../reducers/user';\n// import { API_URL } from '../reusables/urls';\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [mode, setMode] = useState(null);\n//     const accessToken = useSelector(store => store.user.accessToken);\n//     const dispatch = useDispatch();\n//     const history = useHistory();\n//     useEffect(() => {\n//         // redirect user to '/' path\n//         console.log('Checking access token', accessToken);\n//         if (accessToken) {\n//             history.push('/');\n//         }\n//     }, [accessToken, history]);\n//     const onFormSubmit = (e) => {\n//         e.preventDefault();\n//         const options = {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ username, password })\n//         }\n//         fetch(API_URL(mode), options)\n//             .then(res => res.json())\n//             .then(data => {\n//                 console.log(data);\n//                 if (data.success) {\n//                     batch(() => {\n//                         dispatch(user.actions.setUsername(data.username));\n//                         dispatch(user.actions.setAccessToken(data.accessToken));\n//                         dispatch(user.actions.setErrors(null));\n//                     });\n//                 } else {\n//                     console.log(data.error)\n// /*                     dispatch(user.actions.setErrors(data)); */\n//                 }\n//             })\n//             .catch();\n//     };       \n//     return (\n//         <form onSubmit={onFormSubmit}>\n//             <input\n//                 type=\"text\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//             />\n//             <input\n//                 type=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n//             <button type=\"submit\" onClick={() => setMode('signin')}>Sign in</button>\n//             <button type=\"submit\" onClick={() => setMode('signup')}>Sign up</button>\n//         </form>\n//     );\n// };\n// export default Login;\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport user from \"../reducers/user\";\nconst SIGNUP_URL = \"https://authentication-sandra-sofia.herokuapp.com/users\";\nconst LOGIN_URL = \"https://authentication-sandra-sofia.herokuapp.com/sessions\";\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const accessToken = useSelector(store => store.user.login.accessToken);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1]; // FUNCTION TO HANDLE THE LOGIN\n\n\n  const handleLoginSuccess = loginResponse => {\n    dispatch(user.actions.setAccessToken({\n      accessToken: loginResponse.accessToken\n    }));\n    dispatch(user.actions.setUserId({\n      userId: loginResponse.userId\n    }));\n    dispatch(user.actions.setStatusMessage({\n      statusMessage: \"Login Success\"\n    }));\n  }; // FUNCTION TO HANDLE THE LOGIN WHEN IT FAILED\n\n\n  const handleLoginFailed = loginError => {\n    dispatch(user.actions.setAccessToken({\n      accessToken: null\n    }));\n    dispatch(user.actions.setStatusMessage({\n      statusMessage: loginError\n    }));\n  }; // REGISTRATION FUNCTION\n\n\n  const handleSignup = event => {\n    event.preventDefault();\n    fetch(SIGNUP_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Signup Failed\");\n      }\n\n      return response.json();\n    }).then(json => handleLoginSuccess(json)).catch(err => handleLoginFailed(err));\n  }; // LOGIN FUNCTION\n\n\n  const handleLogin = event => {\n    event.preventDefault();\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Login Failed\");\n      }\n\n      return response.json();\n    }).then(json => handleLoginSuccess(json)).catch(err => handleLoginFailed(err));\n  };\n\n  const handleLogout = loggingout => {\n    dispatch(user.actions.logout({\n      logout: loggingout\n    }));\n    window.location.reload();\n  };\n\n  if (accessToken) {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, `Hello ${name} you are logged in! shhh this is a secret area just for you`), React.createElement(\"button\", {\n      className: \"logout-button\",\n      type: \"submit\",\n      onClick: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Logout\"));\n  }\n\n  ;\n  return React.createElement(\"section\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Sign Up/Login\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Name\", React.createElement(\"input\", {\n    required: true,\n    minLength: \"3\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Password\", React.createElement(\"input\", {\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"signup-button\",\n    type: \"submit\",\n    onClick: handleSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"button\", {\n    className: \"login-button\",\n    type: \"submit\",\n    onClick: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Login\")));\n};\nexport default Login;","map":{"version":3,"sources":["/Users/saracarlstein/project-auth/frontend/src/components/Login.js"],"names":["React","useState","useDispatch","useSelector","user","SIGNUP_URL","LOGIN_URL","Login","dispatch","accessToken","store","login","name","setName","password","setPassword","handleLoginSuccess","loginResponse","actions","setAccessToken","setUserId","userId","setStatusMessage","statusMessage","handleLoginFailed","loginError","handleSignup","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","ok","Error","json","catch","err","handleLogin","handleLogout","loggingout","logout","window","location","reload","target","value"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch, batch } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\n\n// import user from '../reducers/user';\n\n// import { API_URL } from '../reusables/urls';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [mode, setMode] = useState(null);\n\n//     const accessToken = useSelector(store => store.user.accessToken);\n//     const dispatch = useDispatch();\n//     const history = useHistory();\n\n//     useEffect(() => {\n//         // redirect user to '/' path\n//         console.log('Checking access token', accessToken);\n//         if (accessToken) {\n//             history.push('/');\n//         }\n//     }, [accessToken, history]);\n\n//     const onFormSubmit = (e) => {\n//         e.preventDefault();\n\n//         const options = {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ username, password })\n//         }\n//         fetch(API_URL(mode), options)\n//             .then(res => res.json())\n//             .then(data => {\n//                 console.log(data);\n//                 if (data.success) {\n//                     batch(() => {\n//                         dispatch(user.actions.setUsername(data.username));\n//                         dispatch(user.actions.setAccessToken(data.accessToken));\n//                         dispatch(user.actions.setErrors(null));\n//                     });\n//                 } else {\n//                     console.log(data.error)\n// /*                     dispatch(user.actions.setErrors(data)); */\n//                 }\n//             })\n//             .catch();\n//     };       \n\n//     return (\n//         <form onSubmit={onFormSubmit}>\n//             <input\n//                 type=\"text\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//             />\n//             <input\n//                 type=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n//             <button type=\"submit\" onClick={() => setMode('signin')}>Sign in</button>\n//             <button type=\"submit\" onClick={() => setMode('signup')}>Sign up</button>\n//         </form>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport  user  from \"../reducers/user\";\n\nconst SIGNUP_URL = \"https://authentication-sandra-sofia.herokuapp.com/users\";\nconst LOGIN_URL = \"https://authentication-sandra-sofia.herokuapp.com/sessions\";\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const accessToken = useSelector((store) => store.user.login.accessToken);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // FUNCTION TO HANDLE THE LOGIN\n  const handleLoginSuccess = (loginResponse) => {\n    dispatch(\n      user.actions.setAccessToken({ accessToken: loginResponse.accessToken })\n    );\n    dispatch(user.actions.setUserId({ userId: loginResponse.userId }));\n    dispatch(user.actions.setStatusMessage({ statusMessage: \"Login Success\" }));\n  };\n\n  // FUNCTION TO HANDLE THE LOGIN WHEN IT FAILED\n  const handleLoginFailed = (loginError) => {\n    dispatch(user.actions.setAccessToken({ accessToken: null }));\n    dispatch(user.actions.setStatusMessage({ statusMessage: loginError }));\n  };\n\n  // REGISTRATION FUNCTION\n  const handleSignup = (event) => {\n    event.preventDefault();\n\n    fetch(SIGNUP_URL, {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Signup Failed\");\n        }\n        return response.json();\n      })\n      .then((json) => handleLoginSuccess(json))\n      .catch((err) => handleLoginFailed(err));\n  };\n\n  // LOGIN FUNCTION\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    fetch(LOGIN_URL, {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Login Failed\");\n        }\n        return response.json();\n      })\n      .then((json) => handleLoginSuccess(json))\n      .catch((err) => handleLoginFailed(err));\n  };\n\n  const handleLogout = (loggingout) => { \n    dispatch(user.actions.logout({ logout: loggingout }));\n    window.location.reload();\n  };\n\n  if(accessToken) {\n    return <>\n    <h2>{`Hello ${name} you are logged in! shhh this is a secret area just for you`}</h2>\n    <button className=\"logout-button\" type=\"submit\" onClick={handleLogout}>\n      Logout\n    </button>\n    </>\n  };\n\n  return (\n    <section className=\"login-form\">\n      <form className=\"form\">\n        <h1>Sign Up/Login</h1>\n        <label>\n          Name\n          <input\n            required\n            minLength=\"3\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            required\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n        <button className=\"signup-button\" type=\"submit\" onClick={handleSignup}>\n          Sign Up\n        </button>\n        <button className=\"login-button\" type=\"submit\" onClick={handleLogin}>\n          Login\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}