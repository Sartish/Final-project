{"ast":null,"code":"import _slicedToArray from \"/Users/saracarlstein/project-auth/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saracarlstein/project-auth/frontend/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch, batch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport user from '../reducers/user';\nimport { API_URL } from '../reusables/urls';\n\nconst Login = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        mode = _useState6[0],\n        setMode = _useState6[1];\n\n  const accessToken = useSelector(store => store.user.accessToken);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    // redirect user to '/' path\n    console.log('Checking access token', accessToken);\n\n    if (accessToken) {\n      history.push('/');\n    }\n  }, [accessToken, history]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    fetch(API_URL(mode), options).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.success) {\n        batch(() => {\n          dispatch(user.actions.setUsername(data.username));\n          dispatch(user.actions.setAccessToken(data.accessToken));\n          dispatch(user.actions.setErrors(null));\n        });\n      } else {\n        console.log(data.error);\n        /*                     dispatch(user.actions.setErrors(data)); */\n      }\n    }).catch();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => setMode('signin'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => setMode('signup'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sign up\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/saracarlstein/project-auth/frontend/src/components/Login.js"],"names":["React","useState","useEffect","useSelector","useDispatch","batch","useHistory","user","API_URL","Login","username","setUsername","password","setPassword","mode","setMode","accessToken","store","dispatch","history","console","log","push","onFormSubmit","e","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","success","actions","setAccessToken","setErrors","error","catch","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch, batch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport user from '../reducers/user';\n\nimport { API_URL } from '../reusables/urls';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [mode, setMode] = useState(null);\n\n    const accessToken = useSelector(store => store.user.accessToken);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        // redirect user to '/' path\n        console.log('Checking access token', accessToken);\n        if (accessToken) {\n            history.push('/');\n        }\n    }, [accessToken, history]);\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        }\n        fetch(API_URL(mode), options)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                if (data.success) {\n                    batch(() => {\n                        dispatch(user.actions.setUsername(data.username));\n                        dispatch(user.actions.setAccessToken(data.accessToken));\n                        dispatch(user.actions.setErrors(null));\n                    });\n                } else {\n                    console.log(data.error)\n/*                     dispatch(user.actions.setErrors(data)); */\n                }\n            })\n            .catch();\n    };       \n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button type=\"submit\" onClick={() => setMode('signin')}>Sign in</button>\n            <button type=\"submit\" onClick={() => setMode('signup')}>Sign up</button>\n        </form>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}