{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst user = createSlice({\n  name: 'user',\n  initialState: {\n    username: null,\n    accessToken: null,\n    errors: null\n  },\n  reducers: {\n    setUsername: (store, action) => {\n      store.username = action.payload;\n    },\n    setAccessToken: (store, action) => {\n      store.accessToken = action.payload;\n    },\n    setErrors: (store, action) => {\n      store.errors = action.payload;\n    } //     logout: (state, action) => {\n    //         state.login.userId = 0;\n    //         state.login.accessToken = null;\n    //         state.login.statusMessage = \"\";\n    //         // localStorage.removeItem('accessToken')\n    //     },\n\n  }\n});\nexport default user;\nexport const logout = () => {\n  return dispatch => {\n    dispatch(user.actions.setAccessToken({\n      accessToken: null\n    }));\n    dispatch(user.actions.setUserName({\n      userName: null\n    }));\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('userName');\n  };\n};","map":{"version":3,"sources":["/Users/saracarlstein/project-auth/frontend/src/reducers/user.js"],"names":["createSlice","user","name","initialState","username","accessToken","errors","reducers","setUsername","store","action","payload","setAccessToken","setErrors","logout","dispatch","actions","setUserName","userName","localStorage","removeItem"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,IAAI,GAAGD,WAAW,CAAC;AACrBE,EAAAA,IAAI,EAAE,MADe;AAErBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,IADA;AAEVC,IAAAA,WAAW,EAAE,IAFH;AAGVC,IAAAA,MAAM,EAAE;AAHE,GAFO;AAOrBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH,KAHK;AAINC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACH,KANK;AAONE,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;AACH,KATK,CAUV;AACA;AACA;AACA;AACA;AACA;;AAfU;AAPW,CAAD,CAAxB;AA4BA,eAAeV,IAAf;AAEA,OAAO,MAAMa,MAAM,GAAG,MAAM;AACxB,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,IAAI,CAACe,OAAL,CAAaJ,cAAb,CAA4B;AAAEP,MAAAA,WAAW,EAAE;AAAf,KAA5B,CAAD,CAAR;AACAU,IAAAA,QAAQ,CAACd,IAAI,CAACe,OAAL,CAAaC,WAAb,CAAyB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAzB,CAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACD,GALD;AAMD,CAPI","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst user = createSlice({\n    name: 'user',\n    initialState: {\n        username: null,\n        accessToken: null,\n        errors: null\n    },\n    reducers: {\n        setUsername: (store, action) => {\n            store.username = action.payload;\n        },\n        setAccessToken: (store, action) => {\n            store.accessToken = action.payload;\n        },\n        setErrors: (store, action) => {\n            store.errors = action.payload;\n        },\n    //     logout: (state, action) => {\n    //         state.login.userId = 0;\n    //         state.login.accessToken = null;\n    //         state.login.statusMessage = \"\";\n    //         // localStorage.removeItem('accessToken')\n    //     },\n    }\n\n\n});\n\nexport default user;\n\nexport const logout = () => {\n    return (dispatch) => {\n      dispatch(user.actions.setAccessToken({ accessToken: null }))\n      dispatch(user.actions.setUserName({ userName: null }))\n      localStorage.removeItem('accessToken')\n      localStorage.removeItem('userName')\n    }\n  }\n\n\n\n"]},"metadata":{},"sourceType":"module"}